apply plugin: 'com.android.application'

// 全局函数
def buildTime = new Date().format("YYYYMMdd")
def gitShortHash  = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def getAppName(){
    return "APPNAME"
}
def genFileName(versionCode, versionName, versionNameSuffix){
    return getAppName() + "_" + versionCode + "_" + versionName + versionNameSuffix + ".apk"
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"
    defaultConfig {
        applicationId "com.lixplor.gradleconfigdemo"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    // 签名配置
    signingConfigs {
        release {

        }
    }

    // 构建类型
    buildTypes {
        // 开发包
        debug {
            applicationIdSuffix ".dev"
            versionNameSuffix "_dev_b" + buildTime + "@" + gitShortHash
            buildConfigField("String", "SERVER_BASE_URL", "\"1.1.1.1\"")
            buildConfigField("boolean", "LOG_ENABLED", "true")
            buildConfigField("boolean", "BUGTAGS_ENABLED", "false")
            signingConfig signingConfigs.debug
            shrinkResources false
            zipAlignEnabled true
            android.applicationVariants.all {
                variant ->
                    variant.outputs.each {
                        output ->
                            output.outputFile = new File(output.outputFile.parent, genFileName(defaultConfig.versionCode, defaultConfig.versionName, versionNameSuffix));
                    }
            }
        }
        // 测试包
        fortest {
            applicationIdSuffix ".test" // todo 会导致三方平台包名不符?
            versionNameSuffix "_test_b" + buildTime + "@" + gitShortHash
            buildConfigField("String", "SERVER_BASE_URL", "\"2.2.2.2\"")
            buildConfigField("boolean", "LOG_ENABLED", "false")
            buildConfigField("boolean", "BUGTAGS_ENABLED", "true")
            signingConfig signingConfigs.debug
            shrinkResources false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            android.applicationVariants.all {
                variant ->
                    variant.outputs.each {
                        output ->
                            output.outputFile = new File(output.outputFile.parent, genFileName(defaultConfig.versionCode, defaultConfig.versionName, versionNameSuffix));
                    }
            }
        }
        // 正式包
        release {
            buildConfigField("String", "SERVER_BASE_URL", "\"3.3.3.3\"")
            buildConfigField("boolean", "LOG_ENABLED", "false")
            buildConfigField("boolean", "BUGTAGS_ENABLED", "true")
            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            android.applicationVariants.all {
                variant ->
                    variant.outputs.each {
                        output ->
                            output.outputFile = new File(output.outputFile.parent, genFileName(defaultConfig.versionCode, defaultConfig.versionName, versionNameSuffix));
                    }
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.0.0'
    testCompile 'junit:junit:4.12'
}
